<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_textbox_title</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>max_width = 250;
selected = true;
blink = false;
txt = "";
alarm[0] = 30;
can_click = true;

gms_show_replace( wt_keyboard, "&lt;constants&gt;
&lt;/constants&gt;
&lt;styles&gt;
overlay:
{
}

window:
{
    width: max;
    height: min;

    vertical-float: true;
    
    	open:
    	{
        		y-offset: 0;
        		tween-speed: 0.3;
    	}
    
    	close:
    	{
        		y-offset: 1;
        		tween-speed: 0.3;
    	}
}

contents:
{
    width: max;
    height: max;
    padding: 5;
    overlapping: true;
}

backgrounds:
{
    normal:
    {
        background-1: @c_background1;
        background-2: @c_background1;
        background-3: @c_background2;
        background-4: @c_background2;
    }

    highlight:
    {
        background-1: @c_button1;
        background-2: @c_button1;
        background-3: @c_button2;
        background-4: @c_button2;
    }
    
    hover:
    {
        background-1: @c_buttonhover1;
        background-2: @c_buttonhover1;
        background-3: @c_buttonhover2;
        background-4: @c_buttonhover2;
    }
}

border:
{
    border-size: 1;
    border-color: @c_border;
}

keyrow:
{
    width: max;
}

keyboard:
{
    key:
    {
        width: max;
        height: 52;
        font: @f_title;
        color: @c_text;
        margin: 2;
        
        background-1: @c_background1;
        background-2: @c_background1;
        background-3: @c_background2;
        background-4: @c_background2;
        tween-speed: 0.3;
        
        hover:
        {
            background-1: @c_buttonhover1;
            background-2: @c_buttonhover1;
            background-3: @c_buttonhover2;
            background-4: @c_buttonhover2;
            tween-speed: 0.05;
        }
    }
    
    x-offset: 0;
    shiftleft:
    {
        x-offset: -1;
        alpha: 0;
        tween-speed: 0.5;
    }
    
    shift0:
    {
        x-offset: 0;
        alpha: 1;
        tween-speed: 0.5;
    }
    
    shiftright:
    {
        x-offset: 1;
        alpha: 0;
        tween-speed: 0.5;
    }
    
    normalkeys:
    {
        width: max;
        height: max;
        x-offset: 0;
    }
    
    numkeys:
    {
        width: max;
        height: max;
        x-offset: 1;
        alpha: 0;
    }
    
    extrakeys:
    {
        width: max;
        height: max;
        x-offset: 1;
        alpha: 0;
        tween-affects-position: true;
    }
    
    close:
    {
        height: 52;
        color: @c_text;
        alpha: 0.5;
        margin-right: 5;
        arrow-size: 10;
        arrow-length: 20;
        width: max;
        height: 52;
        
        hover:
        {
            alpha: 1;
            arrow-length: 40;
            arrow-size: 20;
        }
        
        unhover:
        {
            alpha: 0.5;
            arrow-length: 20;
            arrow-size: 10;
        }
    }
}

&lt;/styles&gt;
&lt;layout&gt;
    &lt;canvas
        name[overlay]
        style[overlay]
        open[overlay]
        close[overlay]&gt;
        
        &lt;canvas
            name[window]
            style[window, window.close, backgrounds.highlight, border] 
            open[window.open] 
            close[window.close]&gt;
            
            &lt;canvas 
                style[contents]
                name[contents]&gt;
                
                &lt;container name[normal-keys] style[keyboard.normalkeys] extrawindow[keyboard.shiftleft] unextrawindow[keyboard.shift0]&gt;
                    &lt;multielement style[keyrow]&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;Q&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;W&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;E&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;R&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;T&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;Y&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;U&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;I&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;O&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;P&lt;/button&gt;
                    &lt;/multielement&gt;
                    
                    &lt;multielement style[keyrow]&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;A&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;S&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;D&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;F&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;G&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;H&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;J&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;K&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;L&lt;/button&gt;
                    &lt;/multielement&gt;
                    
                    &lt;multielement style[keyrow]&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;Z&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;X&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;C&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;V&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;B&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;N&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;M&lt;/button&gt;
                    &lt;/multielement&gt;
                                        
                    &lt;multielement style[keyrow]&gt;
                        &lt;button name[keyboard.shiftkey] style[keyboard.key] onspecial[keyboard.key.hover] onunspecial[keyboard.key]&gt;Shift&lt;/button&gt;
                        &lt;button name[keyboard.key] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;_&lt;/button&gt;
                        &lt;button name[keyboard.backspacekey] style[keyboard.key] hover[keyboard.key.hover] unhover[keyboard.key]&gt;\&lt;-&lt;/button&gt;
                    &lt;/multielement&gt;
                &lt;/container&gt;
                
            &lt;/canvas&gt;
        &lt;/canvas&gt;
    &lt;/canvas&gt;
&lt;/layout&gt;");



gms_show_keyboard();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(blink == false){
    blink = true;
} else{
    blink = false;
}

alarm[0] = 30;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(selected == true){
    if(string_width(keyboard_string) &lt; max_width){
        keyboard_string = string_replace(keyboard_string, '_', ' ');
        txt = keyboard_string;
    } else{
        keyboard_string = txt;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(selected == true){
    if(string_width(keyboard_string) &lt; max_width){
        txt = keyboard_string;
    } else{
        keyboard_string = txt;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(can_click == true){
    selected = true;
    obj_textbox_descr.selected = false;
    keyboard_string = txt;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font_Verdana);
draw_sprite(sprite_index, image_index, x, y);
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_set_color(c_black);

if(txt == ""){
    draw_text(x,y, "Podaj tytuł");
}else{
    if(blink == false) || (selected == false){
        draw_text(x,y, txt);
    }else{
        draw_text(x,y,txt+"|");
    }
}

draw_set_halign(fa_left);
draw_set_valign(fa_top);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
